<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.0" xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm
        http://java.sun.com/xml/ns/persistence/orm_2_0.xsd ">
    <!-- Цвета деталей-->
    <named-query name="getPartColorsByPartId">
        <query>select pc from PartColorEntity pc
            join pc.numbers pn with pn.main = true
            where pc.part.id = :partId order by pn.number</query>
    </named-query>
    <named-query name="getPartColorsByPartIds">
        <query>select pc from PartColorEntity pc join pc.numbers pcn with pcn.main = true
            where pc.part.id in (:partIds) order by pc.part.id, pcn.number</query>
    </named-query>
    <named-query name="getPartColorsByPartIdAndEqualsSearch">
        <query>select pc from PartColorEntity pc join pc.numbers pcn with pcn.main = true
            where pc.part.id = :partId
            and lower(pc.color.name) = lower(:search)
            order by pcn.number
        </query>
    </named-query>
    <named-query name="getPartColorsByPartIdAndNotEqualsSearch">
        <query>select pc from PartColorEntity pc join pc.numbers pcn with pcn.main = true
            where pc.part.id = :partId
            and lower(pc.color.name) like '%' || lower(:search) || '%'
            order by pcn.number
        </query>
    </named-query>
    <named-query name="getPartColorCountByNumber">
        <query>select count(pc.id) from PartColorEntity pc where
            exists (select 1 from PartColorNumberEntity pcn where pcn.partColor.id = pc.id and lower(pcn.number) = lower(:number))
        </query>
    </named-query>
    <named-query name="getPartColorByNumber">
        <query>select pc from PartColorEntity pc
            where exists (select 1 from PartColorNumberEntity pcn where pcn.partColor.id = pc.id and lower(pcn.number) = lower(:number))
        </query>
    </named-query>
    <named-query name="getPartColorByNumberPartNumber">
        <query>select pc from PartColorEntity pc join pc.part p
            where exists (select 1 from PartNumberEntity pn where pn.part.id = p.id and lower(pn.number) = lower(:partNumber))
            and exists (select 1 from PartColorNumberEntity pcn where pcn.partColor.id = pc.id and lower(pcn.number) = lower(:number))
        </query>
    </named-query>
    <named-query name="getPartColorByPartAndColor">
        <query>select pc from PartColorEntity pc where pc.part.id = :partId and pc.color.id = :colorId</query>
    </named-query>
    <named-query name="getPartColorCountInSets">
        <query>
            select count(1)
            from SetPartEntity sp
            where sp.partColor.id = :partColorId
        </query>
    </named-query>
    <named-query name="getPartColorCountInUserParts">
        <query>
            select count(1)
            from UserPartEntity up
            where up.partColor.id = :partColorId
        </query>
    </named-query>

    <named-native-query name="getPartColorIdByPartColorNumberAndPartNumber">
        <query>
            select  lpc.lego_id
            from lego_part_color lpc join lego_part lp on lp.lego_id = lpc.LEGO_PART_ID
                where exists (select 1 from lego_part_number pn where pn.lego_part_id = lp.lego_id and lower(pn.lego_number) = lower(:partNumber))
                and exists (select 1 from lego_part_color_number pcn where pcn.lego_part_color_id = lpc.lego_id and lower(pcn.lego_number) = lower(:colorNumber))
        </query>
    </named-native-query>
</entity-mappings>