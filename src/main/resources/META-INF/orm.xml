<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.0" xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm
        http://java.sun.com/xml/ns/persistence/orm_2_0.xsd ">
    <!-- Серии наборов-->
    <named-query name="findSeriesByName">
        <query>select s from SeriesEntity s where lower(s.name) = lower(:name)</query>
    </named-query>
    <named-query name="getSeriesCount">
        <query>select count(s.id) from SeriesEntity s</query>
    </named-query>
    <named-query name="getSeriesSetsCountByIds">
        <query>select new Map(s.id as id, (select count(1) from SetEntity se where se.series.id = s.id) as cnt)
            from SeriesEntity s where s.id in (:ids)
        </query>
    </named-query>
    <named-query name="getAllSeries">
        <query>select s from SeriesEntity s order by s.name</query>
    </named-query>

    <!-- Наборы-->
    <named-query name="findSetByNumber">
        <query>select s from SetEntity s where lower(s.number) = lower(:number)</query>
    </named-query>
    <named-query name="getSetCountBySeries">
        <query>select count(1) from SetEntity s where s.series.id = :seriesId</query>
    </named-query>
    <named-query name="getSetsCount">
        <query>select count(s.id) from SetEntity s</query>
    </named-query>
    <named-query name="getSetsAdditionalData">
        <query>select new Map(s.id as id,
            (select sum(sp.count) from SetPartEntity sp where sp.set.id = s.id) as partsCount)
        from SetEntity s where s.id in (:ids)</query>
    </named-query>

    <!-- Цвета-->
    <named-query name="findColorByName">
        <query>select c from ColorEntity c where lower(c.name) = lower(:name)</query>
    </named-query>
    <named-query name="getAllColors">
        <query>select c from ColorEntity c order by c.name</query>
    </named-query>

    <!-- Категории деталей-->
    <named-query name="findPartCategoryByName">
        <query>select p from PartCategoryEntity p where lower(p.name) = lower(:name)</query>
    </named-query>
    <named-query name="getAllCategories">
        <query>select p from PartCategoryEntity p order by p.name</query>
    </named-query>

    <!-- Детали-->
    <named-query name="findPartByNumber">
        <query>select p from PartEntity p where lower(p.number) = lower(:number)</query>
    </named-query>
    <named-query name="getPartCountByCategory">
        <query>select count(1) from PartEntity p where p.category.id = :categoryId</query>
    </named-query>
    <named-query name="getPartsCount">
        <query>select count(p.id) from PartEntity p</query>
    </named-query>
    <named-query name="getPartAdditionalDataByIds">
        <query>select new Map(p.id as id,
            (select count(1) from PartColorEntity pc where pc.part.id = p.id) as cnt,
            (select min(pc.number) from PartColorEntity pc where pc.part.id = p.id) as minColorNumber
            )
            from PartEntity p where p.id in (:ids)
        </query>
    </named-query>

    <!-- Цвета деталей-->
    <named-query name="getPartColorsByPartId">
        <query>select pc from PartColorEntity pc where pc.part.id = :partId order by pc.number</query>
    </named-query>
    <named-query name="getPartColorsByPartIdAndEqualsSearch">
        <query>select pc from PartColorEntity pc where pc.part.id = :partId
            and lower(pc.color.name) = lower(:search)
            order by pc.number</query>
    </named-query>
    <named-query name="getPartColorsByPartIdAndNotEqualsSearch">
        <query>select pc from PartColorEntity pc where pc.part.id = :partId
            and lower(pc.color.name) like '%' || lower(:search) || '%'
            order by pc.number</query>
    </named-query>
    <named-query name="getPartColorCountByNumber">
        <query>select count(pc.id) from PartColorEntity pc where lower(pc.number) = lower(:number) or
            lower(pc.alternateNumber) like '%' || lower(:number) || '%'</query>
    </named-query>
    <named-query name="getPartColorByNumber">
        <query>select pc from PartColorEntity pc where lower(pc.number) = lower(:number) or
            lower(pc.alternateNumber) like '%' || lower(:number) || '%'</query>
    </named-query>
    <named-query name="getPartColorByNumberPartNumber">
        <query>select pc from PartColorEntity pc join pc.part p
            where (lower(pc.number) = lower(:number) or
            lower(pc.alternateNumber) like '%' || lower(:number) || '%')and lower(p.number) = lower(:partNumber)</query>
    </named-query>
    <named-query name="getPartColorByPartAndColor">
        <query>select pc from PartColorEntity pc where pc.part.id = :partId and pc.color.id = :colorId</query>
    </named-query>

    <!-- Детали набора sp.partColor.color.name, sp.partColor.part.category.name, sp.partColor.part.name-->
    <named-query name="getSetPartsBySetId">
        <query>select sp from SetPartEntity sp
            join sp.partColor pc
            join pc.part p
            join pc.color c
            where sp.set.id = :setId and
            (lower(pc.number) like '%' || lower(:search) || '%' or
             lower(pc.alternateNumber) like '%' || lower(:search) || '%' or
             lower(p.number) like '%' || lower(:search) || '%' or
             lower(p.alternateNumber) like '%' || lower(:search) || '%' or
             lower(p.name) like '%' || lower(:search) || '%' or
             lower(c.name) like '%' || lower(:search) || '%'
            )
            order by sp.id desc
        </query>
    </named-query>
    <named-query name="getSetPartBySetAndPrtColorId">
        <query>select sp from SetPartEntity sp where sp.set.id = :setId and sp.partColor.id = :partColorId</query>
    </named-query>
    <named-query name="getSetPartsCount">
        <query>select sum(s.count) from SetPartEntity s</query>
    </named-query>
</entity-mappings>